// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSCoder;

SWIFT_CLASS("_TtC12JABSwiftCore7JABView")
@interface JABView : UIView
@property (nonatomic, getter=frame, setter=setFrame:) CGRect frame;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)globalVariablesWereInitialized;
- (void)addAllUI;
- (void)updateAllUI;
- (void)animatedUpdate;
- (void)animatedUpdate:(NSTimeInterval)duration;
- (void)animatedUpdateWithDuration:(NSTimeInterval)duration completion:(void (^ __nonnull)(BOOL))completion;
- (void)closeAllKeyboards;
@end


SWIFT_CLASS("_TtC12JABSwiftCore18JABApplicationRoot")
@interface JABApplicationRoot : JABView
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class JABTouchManager;
@class UIGestureRecognizer;

SWIFT_CLASS("_TtC12JABSwiftCore16JABTouchableView")
@interface JABTouchableView : JABView
@property (nonatomic) JABTouchManager * __nullable touchManager;
@property (nonatomic, copy) NSArray * __nonnull blockingViews;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)createTouchRecognitionSystem;
- (void)blockWithView:(UIView * __nonnull)blockingView;
- (void)unblockWithView:(UIView * __nonnull)blockingView;
- (void)touchDidBegin:(UIGestureRecognizer * __nonnull)gestureRecognizer;
- (void)touchDidChange:(UIGestureRecognizer * __nonnull)gestureRecognizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)touchDidEnd:(UIGestureRecognizer * __nonnull)gestureRecognizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)touchDidCancel:(UIGestureRecognizer * __nonnull)gestureRecognizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
@end

@class UIColor;
@class UIImage;
@class UIFont;

SWIFT_CLASS("_TtC12JABSwiftCore9JABButton")
@interface JABButton : JABTouchableView
@property (nonatomic) BOOL pressed;
@property (nonatomic) BOOL dimmed;
@property (nonatomic, getter=frame, setter=setFrame:) CGRect frame;
@property (nonatomic, getter=backgroundColor, setter=setBackgroundColor:) UIColor * __nullable backgroundColor;
@property (nonatomic) UIColor * __nullable undimmedBackgroundColor;
@property (nonatomic) UIColor * __nullable dimmedBackgroundColor;
@property (nonatomic) UIImage * __nullable image;
@property (nonatomic) UIImage * __nullable pressedImage;
@property (nonatomic, copy) NSString * __nonnull text;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic) UIColor * __nonnull textColor;
@property (nonatomic) UIFont * __nullable font;
@property (nonatomic) CGFloat horizontalContentInset;
@property (nonatomic) CGFloat verticalContentInset;
@property (nonatomic) BOOL dimsWhenPressed;
@property (nonatomic) BOOL swellsWhenPressed;
@property (nonatomic) CGFloat swellFraction;
@property (nonatomic) double swellDuration;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addAllUI;
- (void)updateAllUI;
- (void)touchDidBegin:(UIGestureRecognizer * __nonnull)gestureRecognizer;
- (void)touchDidChange:(UIGestureRecognizer * __nonnull)gestureRecognizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)touchDidEnd:(UIGestureRecognizer * __nonnull)gestureRecognizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)touchDidCancel:(UIGestureRecognizer * __nonnull)gestureRecognizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
@end


SWIFT_CLASS("_TtC12JABSwiftCore8JABPanel")
@interface JABPanel : JABTouchableView
@property (nonatomic) CGFloat heightToWidthRatio;
@property (nonatomic) CGFloat staticAdditionToHeight;
@property (nonatomic) BOOL shouldPassOnTouchNotification;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addAllUI;
- (void)updateAllUI;
- (void)touchDidBegin:(UIGestureRecognizer * __nonnull)gestureRecgonizer;
- (void)touchDidChange:(UIGestureRecognizer * __nonnull)gestureRecgonizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)touchDidEnd:(UIGestureRecognizer * __nonnull)gestureRecgonizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)touchDidCancel:(UIGestureRecognizer * __nonnull)gestureRecgonizer xDistance:(CGFloat)xDistance yDistance:(CGFloat)yDistance xVelocity:(CGFloat)xVelocity yVelocity:(CGFloat)yVelocity methodCallNumber:(NSInteger)methodCallNumber;
- (void)notifySubscribersOfChange;
@end


SWIFT_CLASS("_TtC12JABSwiftCore13JABImagePanel")
@interface JABImagePanel : JABPanel
@property (nonatomic) UIImage * __nullable image;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithImage:(UIImage * __nullable)image;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addAllUI;
- (void)updateAllUI;
@end



SWIFT_CLASS("_TtC12JABSwiftCore20JABPaneledScrollView")
@interface JABPaneledScrollView : JABView
@property (nonatomic) BOOL scrollEnabled;
@property (nonatomic, readonly) NSInteger numberOfPanels;
@property (nonatomic) NSInteger numberOfColumns;
@property (nonatomic) CGFloat betweenBufferForColumns;
@property (nonatomic) CGFloat betweenBufferForRows;
@property (nonatomic) CGFloat sideBuffer;
@property (nonatomic) CGFloat topBuffer;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addAllUI;
- (void)updateAllUI;
- (void)loadWithPanels:(NSArray * __nonnull)panels;
- (void)addPanel:(JABPanel * __nonnull)panel;
- (void)addPanel:(JABPanel * __nonnull)panel toColumn:(NSInteger)column;
- (void)insertPanel:(JABPanel * __nonnull)panel atIndex:(NSInteger)index;
- (void)removeAllPanels;
- (void)deleteAllPanels;
- (CGRect)frameOfNegativePanelWithHeightToWidthRatio:(CGFloat)heightToWidthRatio staticAdditionToHeight:(CGFloat)staticAdditionToHeight forColumn:(NSInteger)column;
- (void)bringPanelToFront:(JABPanel * __nullable)panel;
- (void)panelContentsDidChange:(JABPanel * __nonnull)panel;
@end


SWIFT_CLASS("_TtC12JABSwiftCore19JABSquareImagePanel")
@interface JABSquareImagePanel : JABPanel
@property (nonatomic) UIImage * __nullable image;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithImage:(UIImage * __nullable)image;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addAllUI;
- (void)updateAllUI;
@end

@class UILongPressGestureRecognizer;
@class UITouch;

SWIFT_CLASS("_TtC12JABSwiftCore15JABTouchManager")
@interface JABTouchManager : NSObject <UIGestureRecognizerDelegate>
@property (nonatomic) UIView * __nonnull touchDomain;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNewTouchDomain:(UIView * __nonnull)newTouchDomain OBJC_DESIGNATED_INITIALIZER;
- (void)touchDetected:(UILongPressGestureRecognizer * __nonnull)gestureRecognizer;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * __nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * __nonnull)otherGestureRecognizer;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * __nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * __nonnull)touch;
@end




@interface NSDate (SWIFT_EXTENSION(JABSwiftCore))
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithDateString:(NSString * __nonnull)dateString;
+ (NSArray * __nonnull)months;
+ (NSArray * __nonnull)monthsShort;
+ (NSArray * __nonnull)daysOfWeek;
+ (NSArray * __nonnull)daysOfWeekShort;
@property (nonatomic, readonly, copy) NSString * __nonnull fullDateString;
@property (nonatomic, readonly, copy) NSString * __nonnull fullDateStringShort;
@property (nonatomic, readonly) NSInteger year;
@property (nonatomic, readonly, copy) NSString * __nonnull yearString;
@property (nonatomic, readonly) NSInteger month;
@property (nonatomic, readonly, copy) NSString * __nonnull monthString;
@property (nonatomic, readonly, copy) NSString * __nonnull monthStringShort;
@property (nonatomic, readonly) NSInteger weekOfYear;
@property (nonatomic, readonly, copy) NSString * __nonnull weekOfYearString;
@property (nonatomic, readonly) NSInteger day;
@property (nonatomic, readonly, copy) NSString * __nonnull dayString;
@property (nonatomic, readonly, copy) NSString * __nonnull dayStringOrdinal;
@property (nonatomic, readonly) NSInteger dayOfWeek;
@property (nonatomic, readonly, copy) NSString * __nonnull dayOfWeekString;
@property (nonatomic, readonly, copy) NSString * __nonnull dayOfWeekStringShort;
@property (nonatomic, readonly) NSInteger hour;
@property (nonatomic, readonly, copy) NSString * __nonnull hourString;
@property (nonatomic, readonly) NSInteger minute;
@property (nonatomic, readonly, copy) NSString * __nonnull minuteString;
@property (nonatomic, readonly) NSInteger second;
@property (nonatomic, readonly, copy) NSString * __nonnull secondString;
@property (nonatomic, readonly) NSInteger millisecond;
@end


@interface UIColor (SWIFT_EXTENSION(JABSwiftCore))
- (UIColor * __nonnull)dim:(CGFloat)percentage;
@end


@interface UIFont (SWIFT_EXTENSION(JABSwiftCore))
- (CGSize)sizeOfString:(NSString * __nonnull)string constrainedToWidth:(double)width;
@end


@interface UIImage (SWIFT_EXTENSION(JABSwiftCore))
- (UIImage * __nonnull)imageTintedWithColor:(UIColor * __nonnull)color;
- (UIImage * __nonnull)imageTintedWithColor:(UIColor * __nonnull)color fraction:(CGFloat)fraction;
@end

@class NSString;

@interface UIView (SWIFT_EXTENSION(JABSwiftCore))
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic) CGFloat left;
@property (nonatomic) CGFloat right;
@property (nonatomic) CGFloat top;
@property (nonatomic) CGFloat bottom;
@property (nonatomic) CGRect relativeFrame;
@property (nonatomic) float opacity;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) BOOL masksToBounds;
@property (nonatomic) float shadowOpacity;
@property (nonatomic) CGFloat shadowRadius;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) CGColorRef __nonnull shadowColor;
@property (nonatomic) CGPathRef __nonnull shadowPath;
- (void)printFrameWithTag:(NSString * __nonnull)tag;
- (void)red;
- (void)blue;
- (void)green;
- (void)yellow;
- (void)purple;
- (void)cyan;
- (void)white;
- (void)black;
- (void)lightGray;
- (void)darkGray;
@end

#pragma clang diagnostic pop
